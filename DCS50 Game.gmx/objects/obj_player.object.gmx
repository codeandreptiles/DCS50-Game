<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player_stand_R</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stagger = 16  //number of frames the player is stunned after being hit
dir = 2; // 1 is left, 2 is right
cooldown = 32; //cooldown before you can attack again
hp = 100;
holding = -1; //-1 if not holding anything, id of held object otherwise
stagger_counter = stagger; 
inv_timer = 32; //time before player can take damage after being hit
inv_period = 32;
damage = 5; //amount of damage each punch does
cooldown_count = cooldown  //number of frames before the player can attack after the previous attack
run_R = player_run_R; //sprites for easy changing
run_L = player_run_L;
stand_R = player_stand_R;
stand_L = player_stand_L;
punch_R = player_punch_R;
punch_L = player_punch_L;
hit_R = player_hit_R;
hit_L = player_hit_L;
jump_R = player_jump_R;
jump_L = player_jump_L;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if hp &lt;= 0 {
    instance_destroy();
}
    
if cooldown &lt; cooldown_count  {
    cooldown += 1
 }
 
if inv_timer &lt; inv_period {
    inv_timer += 1;
}

 if stagger_counter &lt; stagger {
    stagger_counter += 1;
} else if stagger_counter == 16{    //allows player to jump after stun is finished
    gravity=0; 
    gravity_direction = 270;
}

if place_free(x,y+1) {  //enables gravity if above the ground
    gravity = 0.5; 
    gravity_direction = 270;
    
} else { 
    jumping = 0;
    gravity=0; 
    gravity_direction = 270; 
    } 

if stagger_counter == stagger {
    if !place_free(x,y+1) and keyboard_check(vk_up) {   //jump
        vspeed=-15;
    }
    
    if place_free(x-8,y)and keyboard_check(vk_left) {   //left
        x-=8;
        sprite_index = player_run_L;
        dir = 1;
    }
    if place_free(x+8,y)and keyboard_check(vk_right) {  //right
        x+=8;
        sprite_index = player_run_R;
        dir = 2;
    } 
}

if (mouse_check_button(mb_left)) and (cooldown == cooldown_count ) and stagger_counter == stagger{ 
    if  holding == -1{   //if the player isn't holding anything
        if dir == 1{
            sprite_index = player_punch_L;
            
            }
        else if dir == 2 {
            sprite_index = player_punch_R;
            }
    } else {    //throws held object
        throw_object(dir, 1, x, y, throwleft, throwright);
        holding = -1;
    }
    cooldown = 0;
}
if (sprite_index == player_punch_R or sprite_index == player_punch_L) and image_index == 13 {   //makes sure that damage is only dealt when the animation shows the punch
        throw_punch(dir, 1, x, y, damage);    
} 

if sprite_index == player_punch_R and image_index == 15 {   //ends the punch animation
        sprite_index = player_stand_R;
} else if sprite_index == player_punch_L and image_index == 15 {
        sprite_index = player_stand_L;
        
}  if !keyboard_check(vk_left) and dir == 1 and sprite_index != player_punch_L and stagger_counter == stagger{  //ensures the stand sprite is used by default
        sprite_index = player_stand_L;
} else if !keyboard_check(vk_right) and dir == 2 and sprite_index != player_punch_R and stagger_counter == stagger{
        sprite_index = player_stand_R;
}

if mouse_check_button(mb_right) and stagger_counter == stagger{ //picks up item
    if instance_exists(obj_pickup_throwable) {
        if abs(obj_pickup_throwable.x - x) &lt;= 100 and abs(obj_pickup_throwable.y - y) &lt;= 100{   //has to be within 100 pixels
            ind = instance_nearest(x,y, obj_pickup_throwable);
            holding = ind.object_index
            throwleft = holding.left;
            throwright = holding.right;
            with(ind){
                instance_destroy();
            }
        }
        
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_projectile_L">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if inv_timer == 32 {
sprite_index = other.friendly == 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_projectile_R">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if inv_timer == 32 and other.friendly == 0{
sprite_index = player_hit_L;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_punchbox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.friendly == 0 {
    hp -= other.damage;
    do_stagger(self, dir);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_arial_hp);
draw_set_valign(fa_center);
draw_set_halign(fa_left);
if hp &gt; 20 {
    draw_text_color(52, 10, hp, c_lime, c_lime, c_green, c_green, 1);
} else if hp &gt; 10 {
    draw_text_color(x + 52, y - 10, hp, c_yellow, c_yellow, $0099CC, $0099CC, 1);
} else {
    draw_text_color(x + 52, y - 10, hp, c_red, c_red, c_maroon, c_maroon, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if holding != -1 {

    if dir == 1{
        draw_sprite(object_get_sprite(holding), 0, x + 32, y + 64)
    } else {
        draw_sprite(object_get_sprite(holding), 0, x - 32, y + 64)
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>40,72</point>
    <point>80,72</point>
    <point>80,160</point>
    <point>40,160</point>
  </PhysicsShapePoints>
</object>
